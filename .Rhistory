time < start+14 ~ "Peri",
T ~ "Post")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),nrow(.),replace=T)) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
survfit(Surv(latency,cens)~exposure,data=dat) %>%
ggsurvplot()
survfit(Surv(latency,cens)~Monkey,data=dat) %>%
ggsurvplot()
mod <- coxph(Surv(latency,!cens) ~ as.factor(Monkey) + state + exposure,data=dat)
mod
mod <- coxph(Surv(latency,!cens) ~ Monkey + state + exposure,data=dat)
mod
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),nrow(.),replace=T)) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
#mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==Inf)
mod <- coxph(Surv(latency,!cens) ~ Monkey + state + exposure,data=dat)
mod
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(state,"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),nrow(.),replace=T),
exposure = relevel(exposure,"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
#mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==Inf)
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),nrow(.),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
#mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==Inf)
mod <- coxph(Surv(latency,!cens) ~ Monkey + state + exposure,data=dat)
mod
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
#mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==Inf)
mod <- coxph(Surv(latency,!cens) ~ Monkey + state + exposure,data=dat)
mod
mod$coefficients
ggplot(dat) +
geom_histogram(aes(PH))
ggplot(dat) +
geom_histogram(aes(latency,col=state,group=state))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -3*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
mod <- coxph(Surv(latency,!cens) ~ Monkey + state + exposure,data=dat)
mod
ggplot(dat) +
geom_histogram(aes(latency,col=state,group=state))
ggplot(dat) +
geom_histogram(aes(latency))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -4*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -5*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -2*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -(0.5)log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = -(0.5)*log(U)/exp(PH)) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
ggplot(dat) +
geom_histogram(aes(PH))
L0.inv <- function(u) (u - 4)/2
n.monkeys <- 5 # Number of monkeys
Monkey.names <- sample(
c("Adam","Amanda","Ben","Brianna","Charles","Christina","Danica","Daniel"),
n.monkeys
)
#Give each Monkey their own individual reaction speeds
Monkey.effect <- runif(n.monkeys,-2,2)
names(Monkey.effect) <- Monkey.names
#Reaction will be faster for lighter shades (and non-existant-ish for Black)
speed <- c(`NoGo` = -10,
`P-`   =  -1,
`P0`   =  0,
`P+`   =  1,
`Go`   = 10)
#treatment will double reaction time, however, there may be a longer lasting effect
# thus why we treat post- differently to pre-
treatment <- c(Pre = 0,
Peri = 1,
Post = 0.2)
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = L0.inv(-log(U)/exp(PH))) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
L0.inv <- function(u) sqrt(u)
n.monkeys <- 5 # Number of monkeys
Monkey.names <- sample(
c("Adam","Amanda","Ben","Brianna","Charles","Christina","Danica","Daniel"),
n.monkeys
)
#Give each Monkey their own individual reaction speeds
Monkey.effect <- runif(n.monkeys,-2,2)
names(Monkey.effect) <- Monkey.names
#Reaction will be faster for lighter shades (and non-existant-ish for Black)
speed <- c(`NoGo` = -10,
`P-`   =  -1,
`P0`   =  0,
`P+`   =  1,
`Go`   = 10)
#treatment will double reaction time, however, there may be a longer lasting effect
# thus why we treat post- differently to pre-
treatment <- c(Pre = 0,
Peri = 1,
Post = 0.2)
#First row to create a table with one row per monkey
dat <- tibble(Monkey = Monkey.names) %>%
#Give each monkey a start time
mutate(start=sample(90-14,n.monkeys,replace=T)) %>%
#Create one row for each day (90 days = 3 months-ish)
group_by_all %>%
expand(time = 1:90) %>%
# What period are we in? Pre-/Peri-/Post?
mutate(state = case_when(time < start ~ "Pre",
time < start+14 ~ "Peri",
T ~ "Post"),
state = relevel(factor(state),"Pre")) %>%
#Test the monkeys between 10 and 100 times per day
mutate(n.tests = sample(10:100,n(),replace=T)) %>%
group_by_all %>%
expand(test = 1:n.tests) %>%
#Drop some useless stuff we've gained at this point
ungroup %>%
select(-n.tests,-start) %>%
#At each test, what shade will they see?
mutate(exposure=sample(c("NoGo","P-","P0","P+","Go"),
nrow(.),p=c(1,0.25,0.25,0.25,0.25),replace=T),
exposure = relevel(factor(exposure),"NoGo")) %>%
#Give each entry a random number (to generate latency)
mutate(U = runif(nrow(.))) %>%
#Generate a coefficient for the effect of current situation
mutate(PH = speed[exposure] + treatment[state] + Monkey.effect[Monkey]) %>%
#Add in a time (these will likely be greater than 3 seconds)
mutate(latency = L0.inv(-log(U)/exp(PH))) %>%
#Add in the censoring at latency = 3
mutate(latency = if_else(latency>3,3,latency)) %>%
mutate(cens = latency==3)
ggplot(dat) +
geom_histogram(aes(latency))
