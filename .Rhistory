part <- match.arg(part, c("body", "header", "footer"),
several.ok = FALSE)
part
(part == "all")
p <- "header"
x
flextable(x)
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
x
p
compose(x = x, i = i, j = j, value = value,
part = p)
p <- "body"
compose(x = x, i = i, j = j, value = value,
part = p)
p <- "footer"
compose(x = x, i = i, j = j, value = value,
part = p)
(nrow_part(x, part) < 1)
(flextable:::nrow_part(x, part) < 1)
flextable:::check_formula_i_and_part(i, part)
flextable:::get_rows_id(x[[part]], i)
i <- get_rows_id(x[[part]], i)
j <- get_columns_id(x[[part]], j)
i
j
symbols_chunks <- rep(list(NULL), length(ref_symbols))
symbol_chunks
symbols_chunks
ref_symbols
.notes <- list("Red Foot" ~ 1,"Blue Foot" ~ 2:3)
.notes
.notes <- list("Red Foot" ~ c(i=1,j=1),"Blue Foot" ~ 2:3)
.notes <- list("Red Foot" ~ c(i=1,j=1),"Blue Foot" ~ c(i=2:3,j=1))
.notes
.notes <- list("Red Foot" ~ i=1,
.notes <- list("Red Foot" ~ i=1)
.notes <- list("Red Foot" ~ (i=1))
/notes
.notes
.notes <- list("Red Foot" ~ (i=1,j=1))
.notes <- list("Red Foot" ~ c(i=1,j=1))
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
x
x %>% collapse_footer
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
#Show footnotes in column formation
x
x %>% collapse_footer
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue Foot"),ref_symbols = "b")
#Show footnotes in column formation
x
x %>% collapse_footer
i
j
value
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
symbols_chunks
x[[part]]$content[i, j]
part
i
j
x
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
x[[part]]$content[i, j]
x[[part]]
x[[part]]$content
x[[part]]$content[1,]
x[[part]]$content[1,1]
x[[part]]$content %>% dim
(flextable:::nrow_part(x, part) < 1)
(is.null(ref_symbols))
symbols_chunks <- rep(list(NULL), length(ref_symbols))
symbols_chunks
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
symbols_chunks
rbind.match.columns
y
value
symbols_chunks
x
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
n_row <- flextable:::nrow_part(x, "footer")
n_row
new <- mapply(function(x, y) {
y$seq_index <- max(x$seq_index, na.rm = TRUE) + 1
rbind.match.columns(list(x, y))
}, x = x[[part]]$content[i, j], y = symbols_chunks, SIMPLIFY = FALSE)
part
content
i
j
x[[part]]$content[i, j]
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
footnote
(!inherits(x, "flextable"))
part <- match.arg(part, c("body", "header", "footer"),
several.ok = FALSE)
part
{
if (!inherits(x, "flextable"))
stop("footnote supports only flextable objects.")
part <- match.arg(part, c("body", "header", "footer"),
several.ok = FALSE)
if (part == "all") {
for (p in c("header", "body", "footer")) {
x <- compose(x = x, i = i, j = j, value = value,
part = p)
}
return(x)
}
if (nrow_part(x, part) < 1)
return(x)
check_formula_i_and_part(i, part)
i <- get_rows_id(x[[part]], i)
j <- get_columns_id(x[[part]], j)
if (is.null(ref_symbols)) {
ref_symbols <- as.character(seq_along(value))
}
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
new <- mapply(function(x, y) {
y$seq_index <- max(x$seq_index, na.rm = TRUE) + 1
rbind.match.columns(list(x, y))
}, x = x[[part]]$content[i, j], y = symbols_chunks, SIMPLIFY = FALSE)
x[[part]]$content[i, j] <- new
n_row <- nrow_part(x, "footer")
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
x <- add_footer_lines(x, values = ref_symbols)
x[["footer"]]$content[seq(n_row + 1, nrow_part(x, "footer")),
1] <- new
x
}
attach(flextable)
library(flextable)
?::
?`::`
check_formula_i_and_part(i, part)
flextable:::check_formula_i_and_part(i, part)
(nrow_part(x, part) < 1)
(flextable:::nrow_part(x, part) < 1)
?flextable:::check_formula_i_and_part_part
?flextable:::check_formula_i_and_part
flextable:::check_formula_i_and_part
get_row_id
flextable:::get_row_id
flextable:::get_rows_id
as.character(seq_along(value))
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
i
j
x[[part]]
x[[part]]$content
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
n_row <- nrow_part(x, "footer")
n_row <- flextable:::nrow_part(x, "footer")
n_row
new
order(x$seq_index)
symbols_chunks$seq_index
symbols_chunks
symbols_chunks$seq_index
x
value
symbols_chunks
do.call(flextable:::rbind.match.columns,new)
new
do.call(flextable:::rbind.match.columns,new)
ref_symbols <- c("a","b")
value = as_paragraph(c("Red Foot","Blue Foot"))
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
symbols_chunks
mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
do.call(flextable:::rbind.match.columns,new)
?do.call
flextable:::rbind.match.columns(new[[1]],new[[2]])
flextable:::rbind.match.columns(list(new[[1]],new[[2]])))
flextable:::rbind.match.columns(list(new[[1]],new[[2]]))
flextable:::rbind.match.columns(new)
new
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
flextable:::rbind.match.columns(new)
new
ref_symbols <- c("a","b","c","d")
values = as_paragraph(c("Red","Blue","Green","Yellow"))
values
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
symbols_chunks
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
flextable:::rbind.match.columns(new)
symbols_chunks
x <- symbols_chunks
x
x$seq_index
y
y <- value
y
min(y$seq_index, na.rm = TRUE) - 1
y$seq_index
y
value
value <- as_paragraph(c("Red","Blue","Green","Yellow"))
value
ref_symbols
symbols_chunks <- rep(list(NULL), length(ref_symbols))
for (symbi in seq_along(ref_symbols)) {
symbols_chunks[[symbi]] <- as_sup(ref_symbols[symbi])
}
mapply(function(x, y) {
y$seq_index <- max(x$seq_index, na.rm = TRUE) + 1
rbind.match.columns(list(x, y))
}, x = x[[part]]$content[i, j], y = symbols_chunks, SIMPLIFY = FALSE)
x
y
x[[part]]$content[i, j]
?mapply
symbols_chunks
n_row <- nrow_part(x, "footer")
x
symbols_chunks
x = symbols_chunks
y = value
y
y$seq_index
names(y)
mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
y <- value[[1]]
x <- symbols_chunks[[1]]
x
y
min(y$seq_index, na.rm = TRUE) - 1
x$seq_index
x
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x
order(x$seq_index)
x$seq_index <- order(x$seq_index)
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
ne
new
flextable:::rbind.match.columns(new)
new$seq_index <- 1:nrow(new)
new <- flextable:::rbind.match.columns(new)
new
dim(new)
new$seq_index <- 1:nrow(new)
new
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
length(new)
if(inline & length(new)>0)
{
new2 <- flextable:::rbind.match.columns(new)
new2$seq_index <- 1:nrow(new2)
}
inline <- T
if(inline & length(new)>0)
{
new2 <- flextable:::rbind.match.columns(new)
new2$seq_index <- 1:nrow(new2)
}
inline
new
new2
values
add_footer_lines(x, values = ref_symbols)
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
add_footer_lines(x, values = ref_symbols)
new
add_footer_lines(x,new2)
ref_symbols
?add_footer
add_footer(x,new2)
x
add_footer(x,values=new2)
add_footer_lines(x,values="")
add_footer_lines(x,values="Test")
x
new
x <- add_footer_lines(x, values = ref_symbols)
x
x[["footer"]]$content[seq(n_row + 1, nrow_part(x, "footer")),
1]
x[["footer"]]$content[seq(n_row + 1, flextable:::nrow_part(x, "footer")),
1]
n_row
flextable:::nrow_part(x, "footer")
seq(n_row + 1, flextable:::nrow_part(x, "footer"))
x[["footer"]]
#if n_row == 0,
x[["footer"]]$content[seq(n_row + 1, flextable:::nrow_part(x, "footer")),
1] <- new
seq(n_row + 1, flextable:::nrow_part(x, "footer"))
(n_row == 0 & inline)
n_row + 1:length(new)
new2
x <- add_footer_lines(x,values="")
x
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
x <- add_footer_lines(x,values="")
footer.rows <- 1
footer.rows
n_row
x[["footer"]]$content[footer.rows, 1] <- new
x[["footer"]]$content$data[footer.rows, 1] <- new
x[["footer"]]$content$data
x[["footer"]]$content
flextable:::`$`
new
collapse <- F
if(collapse)
)
collapse <- F
if (collapse)
?
)
?collapse
?sep
sep <- F
if(sep)
{}
sep
inline
inline <- F
sep <- "; "
!sep
is.logical(sep)
is.logical(sep) & !sep
is.logical(sep) && !sep
sep
sep <- T
is.logical(sep) && !sep
sep <- F
is.logical(sep) && !sep
sep
sep <- "; "
is.logical(sep) && !sep
new
sep
sep <- as_paragraph(sep)
sep
lapply(new,function(x) rbind.match.columns(list(x,sep)))
lapply(new,function(x) flextable:::rbind.match.columns(list(x,sep)))
sep
new
x <- new[[1]]
x
sep
list(x,sep)
sep
sep[[1]]
sep <- as_paragraph(sep)[[1]]
sep <- "; "
sep <- as_paragraph(sep)[[1]]
sep
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
lapply(new,function(x) flextable:::rbind.match.columns(list(x,sep)))
new[-length(new)]
new[-length(new)] <- lapply(new[-length(new)],
function(x) flextable:::rbind.match.columns(list(x,sep)))
new
new2 <- flextable:::rbind.match.columns(new)
x$seq_index <- order(x$seq_index)
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable
x
new <- mapply(function(x, y) {
x$seq_index <- min(y$seq_index, na.rm = TRUE) - 1
x <- flextable:::rbind.match.columns(list(x, y))
x$seq_index <- order(x$seq_index)
x
}, x = symbols_chunks, y = value, SIMPLIFY = FALSE)
new
sep <- as_paragraph(sep)[[1]]
new2 <- new
new2 <- new
new2[-length(new2)] <- lapply(new2[-length(new2)],
function(x) flextable:::rbind.match.columns(list(x,sep)))
new2 <- flextable:::rbind.match.columns(new2)
new2$seq_index <- 1:nrow(new2)
new2
install_github("MyKo101/flextable")
install_github("MyKo101/flextable")
?footnoe
?footnote
devtools::install_github("MyKo101/footnote")
devtools::install_github("MyKo101/flextable")
library(xml2)
install.packages("xml2")
install.packages("xml2",lock=F)
devtools::install_github("MyKo101/flextable")
remove.packages("xml2")
.libPaths()
install_github("xml2")
devtools::install_github("xml2")
library(xml2)
install.packages("xml2")
install.packages("xml2",lock=F)
uninstall.packages("xml2")
detach(xml2)
