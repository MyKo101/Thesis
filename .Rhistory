x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
x
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
x
old.content <- x$footer$content$content$data
new.content <- list()
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
for(i in 1:(nrow(old.content)-1))
{
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
}
new.content[[1]] <- do.call(rbind,old.content[,1])
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
dim(new.content) <- c(1,ncol(old.content))
colnames(new.content) <- colnames(old.content)
x$footer$content$content$data <- new.content
x <- merge_at(x,part="footer")
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
x
old.content <- x$footer$content$content$data
new.content <- list()
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
for(i in 1:(nrow(old.content)-1))
{
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
}
new.content[[1]] <- do.call(rbind,old.content[,1])
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
dim(new.content) <- c(1,ncol(old.content))
colnames(new.content) <- colnames(old.content)
x$footer$content$content$data <- new.content
x <- merge_at(x,part="footer")
x
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
x
old.content <- x$footer$content$content$data
new.content <- list()
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- "; "
sep.content$vertical.align <- NA
for(i in 1:(nrow(old.content)-1))
{
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
}
new.content[[1]] <- do.call(rbind,old.content[,1])
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
dim(new.content) <- c(1,ncol(old.content))
colnames(new.content) <- colnames(old.content)
x$footer$content$content$data <- new.content
x <- merge_at(x,part="footer")
x
dim(x$footer)
dim(x$footer)
x
dim(x)
dim(x)$heights[-1]
tail(dim(x)$heights,1)
#Adjust the heights accordingly
x <- height(x,i=1,height=tail(dim(x)$heights,1),part="footer")
x
dim(x)
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
#Extract the content part of the footer
# This is a 2d-list with 1 row for each footnote and
#     one column for each column in the table
old.content <- x$footer$content$content$data
#This will replace the previous content
new.content <- list()
#Create a row in the content frame as a separator for the final footnote section
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- "; "
sep.content$vertical.align <- NA
#For every row in the old content (i.e. every footnote), apart from the final one
for(i in 1:(nrow(old.content)-1))
{
# bind the old content with the separator
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
#We don't need the seperator at the end, so we only do nrow(.) - 1
}
#rbind the entire first column of the 2d-list
new.content[[1]] <- do.call(rbind,old.content[,1])
# Adjust the seq_index for the new content
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
#Add in the remaining columns to the new content
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
#Turn it into a 2d-list
dim(new.content) <- c(1,ncol(old.content))
#Set the names to be the same as the original content
colnames(new.content) <- colnames(old.content)
#Put the new stuff back into the original flextable
x$footer$content$content$data <- new.content
#merge the entire footer into a single cell
x <- merge_at(x,part="footer")
dim(x)
#Adjust the heights accordingly
x <- height(x,i=1,height=tail(dim(x)$heights,1),part="footer")
x
dim(x)
#Grab the height of a footer-cell
footer.height = tail(dim(x)$heights,1)
#Set the height of all footer-cells to 0
x <- height(x,height=0,part="footer")
dim(x)
#Reset the height of the first row of footer-cells
x <- height(x,i=1,height=footer.height,part="footer")
dim(x)
collapse_footer <- function(x,sep="; ",footer.height=NULL)
{
#Extract the content part of the footer
# This is a 2d-list with 1 row for each footnote and
#     one column for each column in the table
old.content <- x$footer$content$content$data
#This will replace the previous content
new.content <- list()
#Create a row in the content frame as a separator for the final footnote section
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
#For every row in the old content (i.e. every footnote), apart from the final one
for(i in 1:(nrow(old.content)-1))
{
# bind the old content with the separator
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
#We don't need the seperator at the end, so we only do nrow(.) - 1
}
#rbind the entire first column of the 2d-list
new.content[[1]] <- do.call(rbind,old.content[,1])
# Adjust the seq_index for the new content
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
#Add in the remaining columns to the new content
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
#Turn it into a 2d-list
dim(new.content) <- c(1,ncol(old.content))
#Set the names to be the same as the original content
colnames(new.content) <- colnames(old.content)
#Put the new stuff back into the original flextable
x$footer$content$content$data <- new.content
#merge the entire footer into a single cell
x <- merge_at(x,part="footer")
#Grab the height of a footer-cell
if(is.null(footer.height)) footer.height = tail(dim(x)$heights,1)
#Set the height of all footer-cells to 0
x <- height(x,height=0,part="footer")
#Reset the height of the first row of footer-cells
x <- height(x,i=1,height=footer.height,part="footer")
x
}
collapse_footer <- function(x,sep="; ",footer.height=NULL)
{
#Extract the content part of the footer
# This is a 2d-list with 1 row for each footnote and
#     one column for each column in the table
old.content <- x$footer$content$content$data
#This will replace the previous content
new.content <- list()
#Create a row in the content frame as a separator for the final footnote section
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
#For every row in the old content (i.e. every footnote), apart from the final one
for(i in 1:(nrow(old.content)-1))
{
# bind the old content with the separator
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
#We don't need the seperator at the end, so we only do nrow(.) - 1
}
#rbind the entire first column of the 2d-list
new.content[[1]] <- do.call(rbind,old.content[,1])
# Adjust the seq_index for the new content
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
#Add in the remaining columns to the new content
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
#Turn it into a 2d-list
dim(new.content) <- c(1,ncol(old.content))
#Set the names to be the same as the original content
colnames(new.content) <- colnames(old.content)
#Put the new stuff back into the original flextable
x$footer$content$content$data <- new.content
#merge the entire footer into a single cell
x <- merge_at(x,part="footer")
#Grab the height of a footer-cell
if(is.null(footer.height)) footer.height = tail(dim(x)$heights,1)
#Set the height of all footer-cells to 0
x <- height(x,height=0,part="footer")
#Reset the height of the first row of footer-cells
x <- height(x,i=1,height=footer.height,part="footer")
x
}
#Create a tibble
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = runif(4),y = runif(4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
#Show footnotes in column formation
x
#Collapse them into a single row
x %>% collapse_footer
collapse_footer <- function(x,sep="; ",footer.height=NULL)
{
#Extract the content part of the footer
# This is a 2d-list with 1 row for each footnote and
#     one column for each column in the table
old.content <- x$footer$content$content$data
#This will replace the previous content
new.content <- list()
#Create a row in the content frame as a separator for the final footnote section
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
#For every row in the old content (i.e. every footnote), apart from the final one
for(i in 1:(nrow(old.content)-1))
{
# bind the old content with the separator
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
#We don't need the seperator at the end, so we only do nrow(.) - 1
}
#rbind the entire first column of the 2d-list
new.content[[1]] <- do.call(rbind,old.content[,1])
# Adjust the seq_index for the new content
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
#Add in the remaining columns to the new content
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
#Turn it into a 2d-list
dim(new.content) <- c(1,ncol(old.content))
#Set the names to be the same as the original content
colnames(new.content) <- colnames(old.content)
#Put the new stuff back into the original flextable
x$footer$content$content$data <- new.content
#merge the entire footer into a single cell
x <- merge_at(x,part="footer")
#Grab the height of a footer-cell
if(is.null(footer.height)) footer.height = tail(dim(x)$heights,1)
#Set the height of all footer-cells to 0
x <- height(x,height=0,part="footer")
#Reset the height of the first row of footer-cells
x <- height(x,i=1,height=footer.height,part="footer")
x
}
#Create a tibble
x <- tibble(Col = c("Red","Blue","Blue-Green","Yellow"),
x = sample(100,4),y = sample(100,4)) %>%
flextable %>%
footnote(i=1,j=1,value=as_paragraph("Red_Foot"),ref_symbols = "a") %>%
footnote(i=2:3,j=1,value=as_paragraph("Blue_Foot"),ref_symbols = "b")
#Show footnotes in column formation
x
#Collapse them into a single row
x %>% collapse_footer
shiny::runApp('SKS_Calculator')
today()
lubridate::today()
eGFR.Date = "2020-01-01"
(lubridate::today() - eGFR.Date)
(lubridate::today() - ymd(eGFR.Date))
(lubridate::today() - lubridate::ymd(eGFR.Date))
eGFR1 <- 50
eGFR0 <- 70
(eGFR1-eGFR0)/(lubridate::today() - eGFR.Date)
as.numeric(lubridate::today() - eGFR.Date))
as.numeric(lubridate::today() - eGFR.Date)
library(lubridate)
eGFR.Date <- "1/1/2020"
today() - dmy(eGFR.Date)
as.numeric(today() - dmy(eGFR.Date))
eGFR.Rate <- (eGFR1-eGFR0)/as.numeric(today() - dmy(eGFR.Date))
eGFR.Rate
eGFR.Date <- dmy(eGFR.Date)
eGFR.Rate <- (eGFR1-eGFR0)/as.numeric(today() - eGFR.Date)
dat <- tibble(eGFR=c(eGFR0,eGFR1),
Date = c(today(),dmy(eGFR.Date)))
dat
dat <- tibble(eGFR=c(eGFR0,eGFR1),
Date = c(today(),eGFR.Date))
dat
ggplot(dat,aes(Date,eGFR)) +
annotate("label",paste0("eGFR Rate = ",round(eGFR.Rate,4)),
x=mean(today(),eGFR.Date),
y=mean(eGFR0,eGFR1))
mean(today(),eGFR.Date)
ggplot(dat,aes(Date,eGFR)) +
annotate("label",paste0("eGFR Rate = ",round(eGFR.Rate,4)),
x=mean(c(today(),eGFR.Date)),
y=mean(c(eGFR0,eGFR1)))
ggplot(dat,aes(Date,eGFR)) +
geom_line() +
annotate("label",paste0("eGFR Rate = ",round(eGFR.Rate,4)),
x=mean(c(today(),eGFR.Date)),
y=mean(c(eGFR0,eGFR1)))
ggplot(dat,aes(Date,eGFR)) +
geom_line()
paste0("eGFR Rate = ",round(eGFR.Rate,4))
?annotate
ggplot(dat,aes(Date,eGFR)) +
geom_line() +
annotate("label",label=paste0("eGFR Rate = ",round(eGFR.Rate,4)),
x=mean(c(today(),eGFR.Date)),
y=mean(c(eGFR0,eGFR1)))
runApp('SKS_Calculator')
runApp('SKS_Calculator')
rm(list=ls())
runApp('SKS_Calculator')
shinyApp(ui = ui, server = server)
runApp('SKS_Calculator')
eGFR.Rate <- (input$eGFR1-input$eGFR0)/as.numeric(today() - input$eGFR.Date)
dat <- tibble(eGFR=c(input$eGFR0,input$eGFR1),
Date = c(today(),input$eGFR.Date))
ggplot(dat,aes(Date,eGFR)) +
geom_line() +
annotate("label",label=paste0("eGFR Rate = ",round(eGFR.Rate,4)),
x=mean(..x..),
y=mean(..y..)
input
runApp('SKS_Calculator')
knit_to_Google(6)
pkgs <- c("devtools","thesisdown","tidyverse","rlang","flextable",
"googledrive")
purrr::walk(pkgs,library,character.only=T)
cc <- function(x) paste0("[**Cite: ",x,"**]")
xx <- function(x = "xxxx") paste0("[**",x,"**]")
.wd <- "C:/Users/mbrxsmbc/Documents/Thesis/index/"
add_flextable_caption <- function(ref,caption)
{
cat("<caption>(\\#tab:",ref,") ",caption,"</caption>",sep="")
}
stardard_format_table <- function(x,numeric.cols=NULL,widths=NULL)
{
x.new <- x %>%
theme_zebra(odd_header="cornflowerblue") %>%
color(part="header",color="white") %>%
fontsize(size=8) %>%
font(part="all",font="Garamond") %>%
padding(padding=0) %>%
align(align="left") %>%
border(border=officer::fp_border(color="black",width=0.5),part="all") %>%
height(height=0.5/2.54)
if(is.null(widths))
{
x.new <- autofit(x.new)
} else
{
x.new <- width(x.new,width=widths/2.54)
}
if(!is.null(numeric.cols))
{
x.new <- x.new %>%
fontsize(j=numeric.cols,size=7) %>%
font(j=numeric.cols,font="courier new") %>%
align(j=numeric.cols,align="right")
}
return(x.new)
}
collapse_footer <- function(x,sep="; ",footer.height=NULL)
{
old.content <- x$footer$content$content$data
new.content <- list()
sep.content <- old.content[1,1][[1]][1,]
sep.content$txt <- sep
sep.content$vertical.align <- NA
for(i in 1:(nrow(old.content)-1))
{
old.content[i,1][[1]] <- rbind(old.content[i,1][[1]],sep.content)
}
new.content[[1]] <- do.call(rbind,old.content[,1])
new.content[[1]]$seq_index <- 1:nrow(new.content[[1]])
for(i in (2:ncol(old.content))) new.content[[i]] <- old.content[1,i][[1]]
dim(new.content) <- c(1,ncol(old.content))
colnames(new.content) <- colnames(old.content)
x$footer$content$content$data <- new.content
x <- merge_at(x,part="footer")
if(is.null(footer.height)) footer.height = tail(dim(x)$heights,1)
x <- height(x,height=0,part="footer")
x <- height(x,i=1,height=footer.height,part="footer")
x
}
write_chapter_rmd <- function(.file,output="pdf")
{
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
if(is.numeric(.file))
{
if(.file <10) .file <- paste0("0",.file) else .file <- paste0(.file)
ff <- list.files()
.file <- ff[grep(.file,ff)]
}
rmd <- readLines(.file)
title <- rmd[grep("^# ",rmd[1:3])]
title <- substring(title,1,regexpr("{",title,fixed=T)[[1]]-1)
title <- trimws(gsub("#","",title,fixed=T))
title <- paste0("title: ",title)
if(output == "pdf")
{
output.header <- c("output:",
"  bookdown::pdf_document2")
} else if(output=="word")
{
output.header <- c("output:",
"  bookdown::word_document2:",
"    reference_docx: Ref.docx")
} else
{
output.header <- c("output:",
paste0("  bookdown::",output))
}
header <- c(
"---",
title,
"bibliography: ../bib/thesis.bib",
"csl: ../csl/ieee.csl",
"number_sections: true",
output.header,
"---",
"```{r setup, include=F}",
"source(\"../setup.R\")",
"```",
"\\include{latex_commands.txt}",
"<style>",
"caption {",
"  display: table-caption;",
"  text-align: center;",
"}",
"</style>"
)
rmd <- rmd[-grep("^# ",rmd[1:3])]
rmd <- gsub("^#","",rmd)
rmd <- c(header,rmd,"","# References","")
writeLines(rmd,paste0("Chapters/",.file))
}
knit_chapter <- function(.file,output="pdf")
{
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
if(is.numeric(.file))
{
if(.file <10) .file <- paste0("0",.file) else .file <- paste0(.file)
ff <- list.files()
.file <- ff[grep(.file,ff)]
}
write_chapter_rmd(.file,output)
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/Chapters")
rmarkdown::render(.file)
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
}
knit_all_chapters <- function(output="pdf")
{
ff <- list.files()
ff <- ff[grep("^[0-9]",ff)]
ff <- ff[-grep("^(00|99)",ff)]
for(iff in ff) write_chapter_rmd(iff,output)
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/Chapters")
for(iff in ff) rmarkdown::render(iff)
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
}
knit_to_Google <- function(.file,out=F)
{
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
if(is.numeric(.file))
{
if(.file <10) .file <- paste0("0",.file) else .file <- paste0(.file)
ff <- list.files()
.file <- ff[grep(.file,ff)]
}
knit_chapter(.file,"word")
file.title <- gsub("_"," ",gsub(".Rmd","",gsub("^[0-9][0-9]-","",.file)),fixed=T)
file.docx <- paste0("Chapters/",gsub(".Rmd",".docx",.file))
if(nrow(drive_find(file.title))==0)
{
drib <- drive_upload(media=file.docx,path="Thesis",name=file.title,type="document")
cat("\nNew File Created (sharing may be not be active)")
} else {
drib <- drive_update(file=file.title,media=file.docx)
cat("\nUpdated file on Google Docs")
}
cat("\n\nShareable Link for ",file.title,":\n\t",
"https://docs.google.com/document/d/",drib$id,"/edit?usp=sharing",sep="")
setwd("C:/Users/mbrxsmbc/Documents/Thesis/index/")
if(out) return(drib)
}
knit_all_Google <- function()
{
ff <- list.files()
ff <- ff[grep("^[0-9]",ff)]
ff <- ff[-grep("^(00|99)",ff)]
docs <- map_dfr(ff,knit_to_Google,out=T)
return(docs)
}
knit_to_Google(6)
